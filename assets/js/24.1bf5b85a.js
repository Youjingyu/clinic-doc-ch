(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{174:function(e,t,o){"use strict";o.r(t);var n=o(0),a=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("div",{staticClass:"content"},[o("h1",{attrs:{id:"首次分析"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#首次分析","aria-hidden":"true"}},[e._v("#")]),e._v(" 首次分析")]),e._v(" "),o("p",[e._v("现在我们可以开始分析应用了。")]),e._v(" "),o("blockquote",[o("p",[e._v("Now we're ready to profile the application.")])]),e._v(" "),o("p",[e._v("我们先分析 clone 下来的项目中的第一段服务器代码 "),o("code",[e._v("1-server-with-slow-function.js")]),e._v("。")]),e._v(" "),o("blockquote",[o("p",[e._v("Let's try with the first server in the repo, 1-server-with-slow-function.js.")])]),e._v(" "),o("p",[e._v("该代码使用 express 启动了一个 HTTP 服务器，服务器具有一个根路由 "),o("code",[e._v("/")]),e._v("，在渲染页面前执行一定操作。")]),e._v(" "),o("blockquote",[o("p",[e._v("It contains an HTTP server, built using Express with a root route (/) that performs some work before rendering a landing page.")])]),e._v(" "),o("p",[e._v("该服务器可以直接通过执行 "),o("code",[e._v("node 1-server-with-slow-function.js")]),e._v(' 启动，然后用浏览器打开 http://localhost:3000/。如果你看到页面中显示 "Hello World" 说明没有问题。')]),e._v(" "),o("blockquote",[o("p",[e._v('The server can be started with node 1-server-with-slow-function.js and then accessed in the browser at http://localhost:3000/. If the landing page says "Hello World" then things are working!')])]),e._v(" "),o("p",[e._v("我们试着用 Flame 分析这个服务器，看看我们是否能找到代码中的瓶颈。")]),e._v(" "),o("blockquote",[o("p",[e._v("Let's try and profile the server with Flame to see if we can find any bottlenecks.")])]),e._v(" "),o("p",[e._v("在开始之前，我们还需要一个 http 压测工具。")]),e._v(" "),o("blockquote",[o("p",[e._v("To do that we need a tool that can simulate sufficiently intense HTTP load.")])]),e._v(" "),o("p",[e._v("建议使用 "),o("code",[e._v("autocannon")]),e._v("，它支持 Windows、Mac 以及 Linux，并且开箱即用。")]),e._v(" "),o("blockquote",[o("p",[e._v("We suggest autocannon which is supported on Windows, Mac and Linux and is straightforward to use.")])]),e._v(" "),o("p",[e._v("通过 npm 安装 autocannon：")]),e._v(" "),o("blockquote",[o("p",[e._v("Let's install it from npm:")])]),e._v(" "),o("div",{staticClass:"language-bash extra-class"},[o("pre",{pre:!0,attrs:{class:"language-bash"}},[o("code",[o("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" "),o("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" -g autocannon\n")])])]),o("p",[e._v("为了运行分析，我们使用 Flame 运行服务器，当服务器准备就绪时，即开始侦听端口时，再用 autocannon 向它发送大量请求。")]),e._v(" "),o("blockquote",[o("p",[e._v("To run the analysis we want to run the server with Flame and when the server is ready - i.e. starts listening on a port - we want to send a ton of requests to it using autocannon.")])]),e._v(" "),o("p",[e._v("这些操作都可以使用单个命令执行，可以按原样复制和粘贴：")]),e._v(" "),o("blockquote",[o("p",[e._v("All that can be performed with a single command, which can be copied and pasted as-is:")])]),e._v(" "),o("div",{staticClass:"language-bash extra-class"},[o("pre",{pre:!0,attrs:{class:"language-bash"}},[o("code",[e._v("clinic flame --on-port "),o("span",{pre:!0,attrs:{class:"token string"}},[e._v("'autocannon localhost:"),o("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$PORT")]),e._v("'")]),e._v(" -- node 1-server-with-slow-function.js\n")])])]),o("p",[e._v("我们拆分一下这个命令：")]),e._v(" "),o("blockquote",[o("p",[e._v("Let's break this command down:")])]),e._v(" "),o("ul",[o("li",[o("code",[e._v("clinic flame")]),e._v(" 调用 "),o("code",[e._v("flame")]),e._v(" 命令行工具。")])]),e._v(" "),o("blockquote",[o("p",[e._v("The clinic flame portion invokes the flame command tool.")])]),e._v(" "),o("ul",[o("li",[o("code",[e._v("--on-port")]),e._v(" 参数指定在服务开始监听端口后马上执行的脚本，即 "),o("code",[e._v("autocannon localhost:$PORT")]),e._v("。")])]),e._v(" "),o("blockquote",[o("p",[e._v("The --on-port flag will execute the supplied script as soon as the server starts listening on a port.")])]),e._v(" "),o("ul",[o("li",[e._v("脚本中的 "),o("code",[e._v("$PORT")]),e._v(" 变量是服务器开始侦听的第一个端口。")])]),e._v(" "),o("blockquote",[o("p",[e._v("The $PORT variable in that script is set to the first port that the server began listening on.")])]),e._v(" "),o("ul",[o("li",[o("code",[e._v("--")]),e._v(" 后面的命令用于启动我们要分析的服务，比如这里的 "),o("code",[e._v("node 1-server-with-slow-function.js")]),e._v("。")])]),e._v(" "),o("blockquote",[o("p",[e._v("Everything after the double-dash (--) is the command which starts the server that we want to profile, in this case node 1-server-with-slow-function.js.")])]),e._v(" "),o("p",[e._v("这行命令会运行三个可执行文件：父可执行文件 "),o("code",[e._v("clinic flame")]),e._v(", "),o("code",[e._v("--on-port")]),e._v(" 中的可执行文件 "),o("code",[e._v("autocannon")]),e._v("，以及可执行文件 "),o("code",[e._v("Node")]),e._v("。")]),e._v(" "),o("blockquote",[o("p",[e._v("This one command runs three executables: the clinic flame parent executable, the autocannon executable in --on-port and the node executable.")])]),e._v(" "),o("p",[e._v("运行该命令后，将对该进程进行 10 秒的负载测试（10 秒是 autocannon 的默认测试持续时间），然后将结果输出为 HTML 文件，并在浏览器中自动打开的。")]),e._v(" "),o("blockquote",[o("p",[e._v("Upon running the command, the process will be load tested for 10 seconds (as per the autocannon default duration), then the results be compiled into a single HTML file that should automatically open in the browser.")])]),e._v(" "),o("p",[e._v("生成的 HTML 会被渲染为下面的这样：")]),e._v(" "),o("blockquote",[o("p",[e._v("The resulting HTML should look similar to the following:")])]),e._v(" "),o("p",[o("img",{attrs:{src:"https://clinicjs.org/static/60ec54d4c38a25cb8c567ccf71a6c187/65be2/03.png",alt:""}})]),e._v(" "),o("p",[e._v("这就是所谓的火焰图。")]),e._v(" "),o("blockquote",[o("p",[e._v("This is known as a Flamegraph.")])])])}],!1,null,null,null);t.default=a.exports}}]);