(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{183:function(a,n,e){"use strict";e.r(n);var t=e(0),s=Object(t.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var a=this,n=a.$createElement,e=a._self._c||n;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装","aria-hidden":"true"}},[a._v("#")]),a._v(" 安装")]),a._v(" "),e("p",[a._v("Flame 是 Node Clinic 工具的一部分。要安装 Flame，只需要安装 Node Clinic 就行了：")]),a._v(" "),e("blockquote",[e("p",[a._v("Flame is part of the Node Clinic suit of tools. To install Flame, simply install Node Clinic like so:")])]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("npm")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" -g clinic\n")])])]),e("p",[a._v("安装完成后，我们可以通过运行 "),e("code",[a._v("clinic flame command --help")]),a._v(" 命令来检查 Flame 是否已经安装：")]),a._v(" "),e("blockquote",[e("p",[a._v("After installing, we can check if Flame has been installed with running the clinic flame command with the --help flag.")])]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("clinic flame --help\n")])])]),e("p",[a._v("执行上面的命令应该输出如下内容：")]),a._v(" "),e("blockquote",[e("p",[a._v("It should print something similar to the following:")])]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("Clinic Flame - v3.6.0 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("0x v4.7.2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\nclinic flame helps you "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" synchronous bottlenecks\nby creating a flamegraph visualization that assists "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v(" identifying\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" calls that may be blocking the event loop.\n\nFor "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("more")]),a._v(" information see the 0x readme, https://github.com/davidmarkclements/0x\n\nTo run clinic flame\n\n  clinic flame -- node server.js\n\nIf profiling on a server, it can be useful to only "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("do")]),a._v(" data collection:\n\n  clinic flame --collect-only -- node server.js\n\nYou can "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v(" transfer the data and visualize it locally:\n\n  clinic flame --visualize-only PID.clinic.flame\n\nFlags\n-h "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" --help                Display Help\n-v "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" --version             Display Version\n--collect-only             Do not process data on terminiation\n--visualize-only datapath  Build or rebuild visualization from data\n")])])])])}],!1,null,null,null);n.default=s.exports}}]);