(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{178:function(t,n,a){"use strict";a.r(n);var e=a(0),s=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,n=t.$createElement,a=t._self._c||n;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装","aria-hidden":"true"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),a("p",[t._v("Doctor 是 Node Clinic 工具的一部分。要安装 Doctor，只需要安装 Node Clinic 即可：")]),t._v(" "),a("blockquote",[a("p",[t._v("Doctor is part of the Node Clinic suit of tools. To install Doctor, simply install Node Clinic like so:")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -g clinic\n")])])]),a("p",[t._v("安装完成后，我们可以通过运行 "),a("code",[t._v("clinic doctor command --help")]),t._v(" 命令来检查 doctor 是否安装成功：")]),t._v(" "),a("blockquote",[a("p",[t._v("After installing, we can check if Doctor has been installed by running the clinic doctor command with the --help flag.")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("clinic doctor --help\n")])])]),a("p",[t._v("执行上面的命令应该输出如下内容：")]),t._v(" "),a("blockquote",[a("p",[t._v("It should print something similar to the following:")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("Clinic Doctor - v3.12.0\n\nclinic doctor is the first step "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" profiling your application.\nIt will show you what kind of problem you are having and recommend the path\nforward.\n\nTo run clinic doctor\n\n  clinic doctor -- node server.js\n\nIf profiling on a server, it can be useful to only "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" data collection:\n\n  clinic doctor --collect-only -- node server.js\n\nYou can "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v(" transfer the data and visualize it locally:\n\n  clinic doctor --visualize-only PID.clinic-doctor-sample\n\nFlags\n-h "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" --help                Display Help\n-v "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" --version             Display Version\n--collect-only             Do not process data on termination\n--visualize-only datapath  Build or rebuild visualization from data\n--sample-interval interval Sample interval "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" milliseconds\n--on-port                  Run a script when the server starts listening on a port.\n--dest                     Destination "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the collect data "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default ."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".\n")])])])])}],!1,null,null,null);n.default=s.exports}}]);